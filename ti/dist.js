// Generated by CoffeeScript 1.3.3
var Ti, Titanium, TitaniumActivityIndicator, TitaniumButton, TitaniumButtonBar, TitaniumImageView, TitaniumLabel, TitaniumNavigationGroup, TitaniumProgressBar, TitaniumSearchBar, TitaniumSlider, TitaniumSwitch, TitaniumTab, TitaniumTabGroup, TitaniumTabbedBar, TitaniumTableView, TitaniumTableViewRow, TitaniumTableViewSection, TitaniumTextArea, TitaniumTextField, TitaniumView, TitaniumWebView, TitaniumWindow,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Ti = Titanium = {};

Ti.App = {};

Ti.App.Properties = {
  store: {},
  getString: function(key) {
    return Ti.App.Properties.store[key];
  },
  setString: function(key, value) {
    return Ti.App.Properties.store[key] = value;
  }
};

Ti.Platform = {
  createUUID: function() {
    return 'this-is-a-random-string';
  }
};

Ti.UI = {
  createWindow: function(attributes) {
    return console.log('Create window');
  },
  SIZE: 'size'
};

Ti.UI.iPhone = {
  TableViewCellSelectionStyle: 'table-view-cell-selection-style',
  SystemButtonStyle: {
    DONE: 'done'
  }
};

TitaniumView = (function() {

  TitaniumView.prototype.tiClassName = 'TiUIView';

  TitaniumView.prototype.bubbleParent = true;

  function TitaniumView(attributes) {
    this.add = __bind(this.add, this);

    var name, value;
    for (name in attributes) {
      value = attributes[name];
      this[name] = value;
    }
    this.children = [];
    this.hidden = false;
  }

  TitaniumView.prototype.applyProperties = function(properties) {
    var key, value, _results;
    _results = [];
    for (key in properties) {
      value = properties[key];
      _results.push(this[key] = value);
    }
    return _results;
  };

  TitaniumView.prototype.addEventListener = function(name, event) {
    return this.on(name, event);
  };

  TitaniumView.prototype.removeEventListener = function(name, event) {
    return this.off(name, event);
  };

  TitaniumView.prototype.fireEvent = function(name, event) {
    var _ref;
    event = _({}).extend({
      source: this
    }, event || {});
    this.trigger(name, event);
    if (this.bubbleParent) {
      return (_ref = this.parent) != null ? _ref.fireEvent(name, event) : void 0;
    }
  };

  TitaniumView.prototype.add = function(view) {
    view.parent = this;
    return this.children.push(view);
  };

  TitaniumView.prototype.remove = function(view) {
    return this.children = _.without(this.children, view);
  };

  TitaniumView.prototype.getChildren = function() {
    return this.children;
  };

  TitaniumView.prototype.getParent = function() {
    return this.parent;
  };

  TitaniumView.prototype.hide = function() {
    return this.hidden = true;
  };

  TitaniumView.prototype.show = function() {
    return this.hidden = false;
  };

  TitaniumView.prototype.toString = function() {
    return "[object " + this.tiClassName + "]";
  };

  return TitaniumView;

})();

Ti.UI.createView = function(attributes) {
  return new TitaniumView(attributes);
};

_.extend(TitaniumView.prototype, Backbone.Events);

TitaniumActivityIndicator = (function(_super) {

  __extends(TitaniumActivityIndicator, _super);

  function TitaniumActivityIndicator() {
    return TitaniumActivityIndicator.__super__.constructor.apply(this, arguments);
  }

  TitaniumActivityIndicator.prototype.tiClassName = 'TiUIActivityIndicator';

  return TitaniumActivityIndicator;

})(TitaniumView);

Ti.UI.createActivityIndicator = function(attributes) {
  return new TitaniumActivityIndicator(attributes);
};

TitaniumButton = (function(_super) {

  __extends(TitaniumButton, _super);

  function TitaniumButton() {
    return TitaniumButton.__super__.constructor.apply(this, arguments);
  }

  TitaniumButton.prototype.tiClassName = 'TiUIButton';

  return TitaniumButton;

})(TitaniumView);

Ti.UI.createButton = function(attributes) {
  return new TitaniumButton(attributes);
};

TitaniumButtonBar = (function(_super) {

  __extends(TitaniumButtonBar, _super);

  function TitaniumButtonBar() {
    return TitaniumButtonBar.__super__.constructor.apply(this, arguments);
  }

  return TitaniumButtonBar;

})(TitaniumView);

Ti.UI.createButtonBar = function(attributes) {
  return new TitaniumButtonBar(attributes);
};

TitaniumImageView = (function(_super) {

  __extends(TitaniumImageView, _super);

  function TitaniumImageView() {
    return TitaniumImageView.__super__.constructor.apply(this, arguments);
  }

  TitaniumImageView.prototype.tiClassName = 'TiUIImageView';

  return TitaniumImageView;

})(TitaniumView);

Ti.UI.createImageView = function(attributes) {
  return new TitaniumImageView(attributes);
};

TitaniumLabel = (function(_super) {

  __extends(TitaniumLabel, _super);

  function TitaniumLabel() {
    return TitaniumLabel.__super__.constructor.apply(this, arguments);
  }

  TitaniumLabel.prototype.tiClassName = 'TiUILabel';

  return TitaniumLabel;

})(TitaniumView);

Ti.UI.createLabel = function(attributes) {
  return new TitaniumLabel(attributes);
};

TitaniumProgressBar = (function(_super) {

  __extends(TitaniumProgressBar, _super);

  function TitaniumProgressBar() {
    return TitaniumProgressBar.__super__.constructor.apply(this, arguments);
  }

  TitaniumProgressBar.prototype.tiClassName = 'TiUIProgressBar';

  return TitaniumProgressBar;

})(TitaniumView);

Ti.UI.createProgressBar = function(attributes) {
  return new TitaniumProgressBar(attributes);
};

TitaniumSearchBar = (function(_super) {

  __extends(TitaniumSearchBar, _super);

  function TitaniumSearchBar() {
    return TitaniumSearchBar.__super__.constructor.apply(this, arguments);
  }

  TitaniumSearchBar.prototype.tiClassName = 'TiUISearchBar';

  return TitaniumSearchBar;

})(TitaniumView);

Ti.UI.createSearchBar = function(attributes) {
  return new TitaniumSearchBar(attributes);
};

TitaniumSlider = (function(_super) {

  __extends(TitaniumSlider, _super);

  function TitaniumSlider() {
    return TitaniumSlider.__super__.constructor.apply(this, arguments);
  }

  TitaniumSlider.prototype.tiClassName = 'TiUISlider';

  return TitaniumSlider;

})(TitaniumView);

Ti.UI.createSlider = function(attributes) {
  return new TitaniumSlider(attributes);
};

TitaniumSwitch = (function(_super) {

  __extends(TitaniumSwitch, _super);

  function TitaniumSwitch() {
    return TitaniumSwitch.__super__.constructor.apply(this, arguments);
  }

  TitaniumSwitch.prototype.tiClassName = 'TiUISwitch';

  return TitaniumSwitch;

})(TitaniumView);

Ti.UI.createSwitch = function(attributes) {
  return new TitaniumSwitch(attributes);
};

TitaniumTabbedBar = (function(_super) {

  __extends(TitaniumTabbedBar, _super);

  function TitaniumTabbedBar() {
    return TitaniumTabbedBar.__super__.constructor.apply(this, arguments);
  }

  TitaniumTabbedBar.prototype.tiClassName = 'TiUITabbedBar';

  return TitaniumTabbedBar;

})(TitaniumView);

Ti.UI.createTabbedBar = function(attributes) {
  return new TitaniumTabbedBar(attributes);
};

TitaniumTabGroup = (function(_super) {

  __extends(TitaniumTabGroup, _super);

  function TitaniumTabGroup() {
    return TitaniumTabGroup.__super__.constructor.apply(this, arguments);
  }

  TitaniumTabGroup.prototype.tiClassName = 'TiUITabGroup';

  TitaniumTabGroup.prototype.addTab = function(tab) {
    return this.add(tab);
  };

  TitaniumTabGroup.prototype.getTabs = function() {
    return this.children;
  };

  TitaniumTabGroup.prototype.open = function() {};

  return TitaniumTabGroup;

})(TitaniumView);

TitaniumTab = (function(_super) {

  __extends(TitaniumTab, _super);

  function TitaniumTab() {
    return TitaniumTab.__super__.constructor.apply(this, arguments);
  }

  TitaniumTab.prototype.tiClassName = 'TiUITab';

  return TitaniumTab;

})(TitaniumView);

Ti.UI.createTabGroup = function(attributes) {
  return new TitaniumTabGroup(attributes);
};

Ti.UI.createTab = function(attributes) {
  return new TitaniumTab(attributes);
};

TitaniumTableView = (function(_super) {

  __extends(TitaniumTableView, _super);

  function TitaniumTableView() {
    this.rows = [];
    this.sections = [];
    TitaniumTableView.__super__.constructor.apply(this, arguments);
  }

  TitaniumTableView.prototype.tiClassName = 'TiUITableView';

  TitaniumTableView.prototype.add = function(view) {
    throw new Error('Rows can not be added to tables via `add`');
  };

  TitaniumTableView.prototype.appendRow = function(row) {
    row.parent = this;
    return this.rows.push(row);
  };

  TitaniumTableView.prototype.deleteRow = function(index) {
    var row, section;
    row = this.rows[index];
    if (section = row._section) {
      section.rows = _.without(section.rows, row);
    }
    return this.rows = _.without(this.rows, row);
  };

  TitaniumTableView.prototype.appendSection = function(section) {
    section.parent = this;
    return this.sections.push(section);
  };

  TitaniumTableView.prototype.deleteSection = function(index) {
    return this.sections = _.without(this.sections, this.sections[index]);
  };

  return TitaniumTableView;

})(TitaniumView);

TitaniumTableViewRow = (function(_super) {

  __extends(TitaniumTableViewRow, _super);

  function TitaniumTableViewRow() {
    return TitaniumTableViewRow.__super__.constructor.apply(this, arguments);
  }

  TitaniumTableViewRow.prototype.tiClassName = 'TiUITableViewRow';

  return TitaniumTableViewRow;

})(TitaniumView);

TitaniumTableViewSection = (function(_super) {

  __extends(TitaniumTableViewSection, _super);

  TitaniumTableViewSection.prototype.tiClassName = 'TiUITableViewSection';

  function TitaniumTableViewSection() {
    this.rows = [];
    TitaniumTableViewSection.__super__.constructor.apply(this, arguments);
  }

  TitaniumTableViewSection.prototype.add = function(row) {
    row.parent = this;
    row._section = this;
    this.rows.push(row);
    return this.parent.appendRow(row);
  };

  return TitaniumTableViewSection;

})(TitaniumView);

Ti.UI.createTableView = function(attributes) {
  return new TitaniumTableView(attributes);
};

Ti.UI.createTableViewRow = function(attributes) {
  return new TitaniumTableViewRow(attributes);
};

Ti.UI.createTableViewSection = function(attributes) {
  return new TitaniumTableViewSection(attributes);
};

TitaniumTextArea = (function(_super) {

  __extends(TitaniumTextArea, _super);

  function TitaniumTextArea() {
    return TitaniumTextArea.__super__.constructor.apply(this, arguments);
  }

  TitaniumTextArea.prototype.tiClassName = 'TiUITextArea';

  return TitaniumTextArea;

})(TitaniumView);

Ti.UI.createTextArea = function(attributes) {
  return new TitaniumTextArea(attributes);
};

TitaniumTextField = (function(_super) {

  __extends(TitaniumTextField, _super);

  function TitaniumTextField() {
    return TitaniumTextField.__super__.constructor.apply(this, arguments);
  }

  TitaniumTextField.prototype.tiClassName = 'TiUITextField';

  TitaniumTextField.prototype.setValue = function(value) {
    this.value = value;
    return this.trigger('change', {
      value: this.value
    });
  };

  return TitaniumTextField;

})(TitaniumView);

Ti.UI.createTextField = function(attributes) {
  return new TitaniumTextField(attributes);
};

TitaniumWebView = (function(_super) {

  __extends(TitaniumWebView, _super);

  function TitaniumWebView() {
    return TitaniumWebView.__super__.constructor.apply(this, arguments);
  }

  TitaniumWebView.prototype.tiClassName = 'TiUIWebView';

  return TitaniumWebView;

})(TitaniumView);

Ti.UI.createWebView = function(attributes) {
  return new TitaniumWebView(attributes);
};

TitaniumWindow = (function(_super) {

  __extends(TitaniumWindow, _super);

  function TitaniumWindow() {
    return TitaniumWindow.__super__.constructor.apply(this, arguments);
  }

  TitaniumWindow.prototype.tiClassName = 'TiUIWindow';

  TitaniumWindow.prototype.bubbleParent = false;

  TitaniumWindow.prototype.open = function() {
    return this.trigger('open');
  };

  TitaniumWindow.prototype.close = function() {
    return this.trigger('close');
  };

  return TitaniumWindow;

})(TitaniumView);

Ti.UI.createWindow = function(attributes) {
  return new TitaniumWindow(attributes);
};

TitaniumNavigationGroup = (function(_super) {

  __extends(TitaniumNavigationGroup, _super);

  function TitaniumNavigationGroup() {
    return TitaniumNavigationGroup.__super__.constructor.apply(this, arguments);
  }

  TitaniumNavigationGroup.prototype.open = function() {
    return this.trigger('open');
  };

  TitaniumNavigationGroup.prototype.close = function() {
    return this.trigger('close');
  };

  return TitaniumNavigationGroup;

})(TitaniumView);

Ti.UI.iPhone.createNavigationGroup = function(attributes) {
  return new TitaniumNavigationGroup(attributes);
};
